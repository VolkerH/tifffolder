language: python
python:
- "3.6"
- "3.5"
- "2.7"
branches:
  only:
  - master
  - develop

cache: pip

# install:
#   - echo "TRAVIS_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION"
#   - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
#   - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
#   - if [[ "$BRANCH" == "master" ]]; then export LABEL="main"; else export LABEL="dev"; fi
# 
#   - sudo apt-get update
#   - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
#       wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
#     else
#       wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
#     fi
#   - bash miniconda.sh -b -p $HOME/miniconda
#   - export PATH="$HOME/miniconda/bin:$PATH"
#   - export USER=talley
#   - export CONDA_BLD_PATH=~/conda-bld
# 
#   - hash -r
#   - conda config --set always_yes yes --set changeps1 no
#   - conda install conda-build anaconda-client
#   - conda update -q conda
#   - conda config --add channels anaconda
#   - conda config --add channels conda-forge
#   - conda config --add channels talley
#   - conda config --add channels talley/label/dev
#   - conda config --set show_channel_urls true
#   - conda info -a
# 
# script:
#   - conda build --py $TRAVIS_PYTHON_VERSION  conda.recipe
#   - OUTPUT=$(conda build --py $TRAVIS_PYTHON_VERSION --output conda.recipe)
#   - echo $OUTPUT
# 
# after_success:
#   - echo $TRAVIS_TEST_RESULT
#   - conda convert -p osx-64 -o $CONDA_BLD_PATH $OUTPUT
#   - anaconda -v -t $CONDA_UPLOAD_TOKEN upload -u $USER --force $CONDA_BLD_PATH/osx-64/*.tar.bz2 --label $LABEL
#   - anaconda -v -t $CONDA_UPLOAD_TOKEN upload -u $USER --force $CONDA_BLD_PATH/linux-64/*.tar.bz2 --label $LABEL

install: true
script: true
deploy:
  provider: pypi
  user: talley
  password:
    secure: bJEdYOU14stRnqALaJJcLf75cRYPpPaGmeq5feGrfTjS2rnH1WhDZdy5N58PRNlQVulrv6sFxVUGrcODMGySR2SIeSAXkbSq75P29A5nsTkUOFN9SiP/mBC5xrXN+9Q8JUa5gy1cgzHVMijfPb/Z/f/1XYO68i2NwW9EJM7s+JsrFeBapa0+iv4rQjVmuruGEy7CJhEXWQoUF4xA7Hywqq6xejPF46IVBklCtyJUBIgv+nwLyLPFdHJBK7xWvBq4GnCaHdefSWjp1oevZ/1IQ+OoSq8PoXIyMsnRimx9j80Dsp5S0ukTsdB0DPHywS2jDmQVtoc6MOY/t/yDoT/6uMYKZGSHCSbG/cBtgV5Y9qZRJczcGZBRU9wrryXsNzE1xcp7Bt7GHuKddiQ7dbNknJ+7RiJTp/k3bsHrlbWEbt88rV9ug4WIpVCAdnmf4wTeBqqF98wWDsGOGNgCxaq2btwQ496NNQTJk1NeskxqnTJcBkWV37Yav7iu8fTWmZGG017rEZIOD+UnSW36SfmFG54WB6DxDMFs6OYALCqXebtQWdvEFFjSMy01sGJEpgjv6JQx+f81WagMd01zlVsHfcNLIH/gxQeS6nZvw99SsDRLnE462NZVaK8TTtWZWE5zLzUel408blVAwpT+MgM3ys9MT+Q3ywPQuC+IMwG5DB8=
  on:
    branch: master