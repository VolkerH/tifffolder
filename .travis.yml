language: python
python:
 - '3.6'
 - '3.5'
 - '2.7'

branches:
  only:
  - master
  - develop

cache: pip


install:
  - echo "TRAVIS_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION"
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
  - if [[ "$BRANCH" == "master" ]]; then
      export LABEL="main";
    else
      export LABEL="dev";
    fi

  - sudo apt-get update
  # Install Anaconda
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export USER=talley
  - export CONDA_BLD_PATH=~/conda-bld

  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda install conda-build anaconda-client
  - conda update -q conda
  - conda config --add channels conda-forge
  - conda config --set show_channel_urls true
  - conda info -a
  - python setup.py sdist

script:
  - conda build --py $TRAVIS_PYTHON_VERSION  conda.recipe
  - OUTPUT=$(conda build --py $TRAVIS_PYTHON_VERSION --output conda.recipe)
  - echo $OUTPUT

after_success:
  - echo $TRAVIS_TEST_RESULT
  - conda convert -p osx-64 -o $CONDA_BLD_PATH $OUTPUT
  - anaconda -v -t $CONDA_UPLOAD_TOKEN upload -u $USER --force $CONDA_BLD_PATH/osx-64/*.tar.bz2 --label $LABEL
  - anaconda -v -t $CONDA_UPLOAD_TOKEN upload -u $USER --force $CONDA_BLD_PATH/linux-64/*.tar.bz2 --label $LABEL


deploy:
  provider: pypi
  user: talley
  password:
    secure: ZoNgL/hBNtuyRIaEReRKpA1Hm1oT69J+hvv13fTL6kB4RsgPMu+gjO5iBFod5L2ByG/6ZB1p/mee8xCs2w+ZUZOUty4Ngm2+UfNItm7piwWYM/1USGDdJ4elIzDsS++xy+8nr4J2T3mVqbYXNk25AonUGOhmSNDeoHHqLV2Jribw7GepXWh5rFBjQlEYNCLWMbLI+n89IIK0jpY7dvn9sU+NGzo1a+73YE9CVoJJnVfmnzfel3SP+nr2kG2ZwXnfMmd8yUPFVJDm/yk4WMNuD4a8CECiivFZbX1MYGgM1iuSq/FhbtJ9ZBOrCpEUml9IvrzUOb/THYAx5GTtkPsFBRueVPg5WCL6Xmxid913oJhtKy8w+/X/jeSZVLqi+YjPFiUvGblqMrAQA8eiWBVCB9IlXWh61Fi5I0nykLkpJkdJd8mdzPLS2dqU+ha6LHGAOevtpXyWrr9b2qpm7Mo4pOWtRlr4PiYwqC7YcIS8wXHUzMjXCMhHStkm3HqClieq1Dgc8q2AtEB2DTFW8crx41Dss+OwS9jpQ1biFPV/PDQtVPC3tr5CJ1xmR+pBfLEK4FUhc+1JITQZvDgIwE8bqCtDjyXdFOexCW9ETVBPSdbNc5VW2d5UWD6POee3HhsBPIsDdyDrt+CXPjpIujqP7liXCOCzj6pv3wofiCy0nxM=
  on:
    branch: master